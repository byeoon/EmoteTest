function Y(o){window.enmity.plugins.registerPlugin(o)}const m=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const t=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const V=window.enmity.modules.common.Toasts;window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users;const C=window.enmity.modules.common.Navigation,G=window.enmity.modules.common.NavigationNative,M=window.enmity.modules.common.NavigationStack;window.enmity.modules.common.Theme;const j=window.enmity.modules.common.Linking,d=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;const A={byProps:(...o)=>window.enmity.modules.filters.byProps(...o),byName:(o,n)=>window.enmity.modules.filters.byName(o,n),byTypeName:(o,n)=>window.enmity.modules.filters.byTypeName(o,n),byDisplayName:(o,n)=>window.enmity.modules.filters.byDisplayName(o,n)};function K(...o){return window.enmity.modules.bulk(...o)}function u(...o){return window.enmity.modules.getByProps(...o)}window.enmity.modules.common;function $(o){return window.enmity.patcher.create(o)}const{components:e}=window.enmity;e.Alert,e.Button,e.FlatList,e.Image,e.ImageBackground,e.KeyboardAvoidingView,e.Modal,e.Pressable,e.RefreshControl;const F=e.ScrollView;e.SectionList,e.StatusBar,e.StyleSheet,e.Switch;const i=e.Text;e.TextInput,e.TouchableHighlight;const D=e.TouchableOpacity;e.TouchableWithoutFeedback,e.Touchable;const I=e.View;e.VirtualizedList,e.Form,e.FormArrow,e.FormCTA,e.FormCTAButton,e.FormCardSection,e.FormCheckbox,e.FormDivider,e.FormHint,e.FormIcon,e.FormInput,e.FormLabel,e.FormRadio;const R=e.FormRow;e.FormSection,e.FormSelect,e.FormSubLabel;const x=e.FormSwitch;e.FormTernaryCheckBox,e.FormText,e.FormTextColors,e.FormTextSizes;var W="EmotesPlus",X="1.2.0",J="Enhanced mobile emote management.",Q=[{name:"byron",id:"639577344276692992"}],q="#00007d",Z="https://github.com/byeoon/EmotesPlus",ee=[`
 1.0.1: Optimized code, added toast icon, fixed bug where actionsheet would not close on click, settings now have changelog and version fixed 
`,`1.0.2: Removed lengthy text when copying hyperlink to clipboard, fixed bug where some elements would have $ before them, added text titles and better spacing. 
`,`1:0.3: De-cluttered the emote menu, you can now decide if you want to copy as hyperlink or emote using Settings. 
 `,`1.1.0: You can now clone emotes to servers! 
`,"1.2.0: You can now copy emotes as an image, and also fixed the bug where the settings would be inversed."],E={name:W,version:X,description:J,authors:Q,color:q,sourceUrl:Z,changelog:ee};function oe(o,n,l){return window.enmity.settings.get(o,n,l)}const k=M.createStackNavigator();var te=({name:o="Page",component:n=I}={})=>{const l=d.createThemedStyleSheet({container:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,flex:.5},card:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_PRIMARY,color:m.ThemeColorMap.TEXT_NORMAL},header:{backgroundColor:d.ThemeColorMap.BACKGROUND_MOBILE_SECONDARY,shadowColor:"transparent",elevation:0},text:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:m.Fonts.PRIMARY_NORMAL,fontSize:16,marginLeft:16,backgroundColor:"transparent"}}),p=({onPress:a,title:T})=>t.createElement(D,{onPress:a},t.createElement(i,{style:l.text},T));return t.createElement(G.NavigationContainer,{independent:!0},t.createElement(k.Navigator,{initialRouteName:o,style:l.container,screenOptions:{cardOverlayEnabled:!1,cardShadowEnabled:!1,cardStyle:l.card,headerStyle:l.header,headerTitleContainerStyle:{color:m.ThemeColorMap.HEADER_PRIMARY},headerTitleAlign:"center",safeAreaInsets:{top:0}}},t.createElement(k.Screen,{name:o,component:n,options:{headerTitleStyle:{color:"white",fontFamily:m.Fonts.PRIMARY_NORMAL},headerLeft:()=>t.createElement(p,{title:"Cancel",onPress:()=>{C.pop()}}),...M.TransitionPresets.ModalSlideFromBottomIOS}})))};function B(o,n){fetch(o).then(l=>{l.blob().then(p=>{const a=new FileReader;a.readAsDataURL(p),a.onloadend=()=>{n(a.result)}})})}const[ne,ie,le]=K(A.byProps("getGuilds"),A.byProps("can","_dispatcher"),A.byProps("uploadEmoji"));function re(o,n,l){return window.enmity.utilities.findInReactTree(o,n,l)}function me(o){return window.enmity.assets.getIDByName(o)}const se=u("setString"),{default:y}=u("ButtonColors","ButtonSizes");var ae=({settings:o})=>{const n=d.createThemedStyleSheet({title:{flexDirection:"column"},pluginTitle:{fontSize:30,paddingTop:20,paddingLeft:20,paddingRight:30,color:m.ThemeColorMap.HEADER_PRIMARY},pluginAuthor:{fontSize:12,paddingLeft:45,color:m.ThemeColorMap.HEADER_SECONDARY},br:{fontSize:0,paddingTop:20,paddingLeft:20,paddingRight:30,color:m.ThemeColorMap.HEADER_SECONDARY},tab:{fontSize:14,paddingTop:20,paddingLeft:20,paddingRight:25,color:m.ThemeColorMap.HEADER_SECONDARY}});return t.createElement(F,null,t.createElement(I,{style:n.title},t.createElement(i,{style:n.pluginTitle},"EmotesPlus"),t.createElement(i,{style:n.pluginAuthor},"Developed by byron"),t.createElement(i,{style:n.pluginAuthor},"Version ",E.version),t.createElement(i,{style:n.br}," "),t.createElement(i,{style:n.tab},"Settings")),t.createElement(R,{label:"New UI Support (WIP)",trailing:t.createElement(x,{value:o.get("newUISupport",!1),onValueChange:()=>o.toggle("newUISupport",!0)})}),t.createElement(R,{label:"Copy Emotes as Hyperlink",trailing:t.createElement(x,{value:o.get("copyAsHyperlink",!0),onValueChange:()=>o.toggle("copyAsHyperlink",!0)})}),t.createElement(i,{style:n.br}," "),t.createElement(y,{color:y.Colors.BRAND,text:"Copy Plugin Link",size:y.Sizes.SMALL,onPress:()=>{se.setString("https://raw.githubusercontent.com/byeoon/EmotesPlus/main/dist/EmotesPlus.js")}}),t.createElement(i,{style:n.br}," "),t.createElement(y,{color:y.Colors.BRAND,text:"Visit GitHub Repository",size:y.Sizes.SMALL,onPress:()=>{j.openURL("https://github.com/byeoon/EmotesPlus")}}),t.createElement(i,{style:n.br}," "),t.createElement(i,{style:n.br}," "),t.createElement(i,{style:n.pluginAuthor},"Changelog: ",E.changelog))};const b=u("openLazy","hideActionSheet"),v=u("setString"),w=$("EmotesPlus"),{default:s}=u("ButtonColors","ButtonSizes");u("RedesignCompat");const ce=m.Permissions;function f(o){V.open({content:o,icon:me("Check")})}const de={...E,onStart(){console.log("[EmotesPlus] Hello World!");const o=w.before(b,"openLazy",(n,[l,p])=>{p==="MessageEmojiActionSheet"&&(o(),l.then(a=>{w.after(a,"default",(T,ue,z)=>{const O=w.after(z,"type",(ye,pe,_)=>{t.useEffect(()=>()=>void O(),[]);const P=re(_,c=>{var r,g;return(c==null?void 0:c.type)&&((r=c==null?void 0:c.props)==null?void 0:r.emojiNode)&&((g=c==null?void 0:c.props)==null?void 0:g.nonce)});!P||w.after(P,"type",(c,[{emojiNode:r}],g)=>{var N,L;const U=Object.entries(ne.getGuilds()).filter(([h,S])=>ie.can(ce.MANAGE_GUILD_EXPRESSIONS,S));(L=(N=g==null?void 0:g.props)==null?void 0:N.children)==null||L.push(t.createElement(i,{text:"Emotes+"}),t.createElement(s,{color:s.Colors.BRAND,text:"Copy Emote URL",size:s.Sizes.SMALL,onPress:()=>{f("Copied Emote URL to clipboard!"),oe(E.name,"copyAsHyperlink",!1)?v.setString(r.src):v.setString("["+r.alt+"]("+r.src+")"),b.hideActionSheet()}}),t.createElement(i,{text:"  "}),t.createElement(s,{color:s.Colors.BRAND,text:"Copy Emote as Image (WIP)",size:s.Sizes.SMALL,onPress:()=>{B(r.src,h=>{v.setImage(h.split(",")[1])}),f("Copied Emote as image!"),b.hideActionSheet()}}),t.createElement(i,{text:"  "}),t.createElement(s,{color:s.Colors.BRAND,text:"Clone to Server",size:s.Sizes.SMALL,onPress:()=>{C.push(te,{component:()=>t.createElement(F,null,U.map(([h,S])=>t.createElement(D,{onPress:()=>B(r.src,H=>{le.uploadEmoji({guildId:h,image:H,name:r.alt,roles:void 0}).then(()=>{f(`Cloned emote to ${S}!`),C.pop()})})},t.createElement(R,{label:" "+S})))),name:"Clone Emote"}),b.hideActionSheet()}}))})})})}))})},onStop(){w.unpatchAll()},getSettingsPanel({settings:o}){return t.createElement(ae,{settings:o})}};Y(de);
